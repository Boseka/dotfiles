POWER_AC_ON_STYLE='#[fg=brightgreen,reverse]'
POWER_AC_OFF_STYLE='#[fg=brightred,reverse]'

POWER_BATTERY_HIGH_STYLE='#[fg=brightgreen,reverse]'
POWER_BATTERY_MED_STYLE='#[fg=brightyellow,reverse]'
POWER_BATTERY_LOW_STYLE='#[fg=brightred,reverse]'

DATETIME_STYLE='#[default]'
DISKSPACE_STYLE='#[fg=brightmagenta]'
LOAD_AVG_STYLE='#[fg=brightcyan]'

function battery_status {
    local AC_POWER=$(pmset -g ps | head -n1 | cut -d "'" -f 2)
    local BATTERY_PERC=$(pmset -g ps | tail -n1 | cut -d "%" -f 1 | cut -f 2)
    local TIME_REMAINING=$(pmset -g ps | tail -n1 | cut -d ';' -f 3 | cut -d ' ' -f 2)

    if [[ $BATTERY_PERC -lt 20 ]]; then
        local BATTERY_STR="$POWER_BATTERY_LOW_STYLE $BATTERY_PERC% | $TIME_REMAINING #[default]"
    elif [[ $BATTERY_PERC -lt 70 ]]; then
        local BATTERY_STR="$POWER_BATTERY_MED_STYLE $BATTERY_PERC% | $TIME_REMAINING #[default]"
    else
        local BATTERY_STR="$POWER_BATTERY_HIGH_STYLE $BATTERY_PERC% | $TIME_REMAINING #[default]"
    fi

    if [[ $AC_POWER = "AC Power" ]]; then
        local AC_STR="${POWER_AC_ON_STYLE} AC #[default]"
    else
        local AC_STR="${POWER_AC_OFF_STYLE} AC #[default]"
    fi

    echo -n "$AC_STR$BATTERY_STR"
}

function datetime {
    echo -n "$DATETIME_STYLE$(date +"%H:%M %a %m/%d")#[default]"
}

function disk_space {
    local DISK_FREE=$(df -h | awk '/disk1/ {print $5, $4}')
    echo -n "$DISKSPACE_STYLE$DISK_FREE#[default]"
}

function load_avg {
    local LOAD_AVG=$(uptime | awk -F'load averages: ' '{print $2}')
    echo -n "$LOAD_AVG_STYLE$LOAD_AVG#[default]"
}

function separator {
    echo -n "  "
}


disk_space; separator; load_avg; separator; which pmset 2>&1 > /dev/null && battery_status && separator; datetime
